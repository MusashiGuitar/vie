２回　JavaScriptとフレームワーク

1章

JavaScriptを多用したモダンなアーキテクチャ
フロントエンド⇒バックエンド⇒データベース

フロントエンド
・ユーザーがブラウザで見るものを実現するコード

バックエンド
・アプリケーションのロジックを組み立てるコード
・ログインページにおけるユーザ認証
・スケジュールに沿ってタスクを実行
・外部サービスとの連動

Webサイト作成とは違うWeb開発
・Webサイト　:端末（クライアント）←　html JavaScript
・誰が見ても同じページが表示される

・Webアプリケーション　:端末（クライアント）←　html JavaScript =　プログラミング　データベース　クレジットカード会社

アプリの例
・オンラインショップで商品を買う場合
①商品検索
・検索をする
②検索結果
・データベースが検索結果をフロントエンドへ返す
③注文
・注文情報をデータベースへ保存
④クレジットカード
・REST APIを使い照合しフロントエンドのプログラムへ返す⇒ユーザーへ返す
⑤ショッピング成立


フロントエンドJavaScriptフレームワーク
フロントエンドの開発においては言語を使って0から開発する
フルスクラッチ開発ではなく、フレームワークを使った開発が増えてきている
・Angular
Googleが開発したもの、学習コストが高い
・React
開発ボタンやボックスなどUIの開発に特化している。SPAが作りやすい
・Vue
UIに特化している。必要なものが一通りそろっている。学習コストが比較的低い（授業で使うのはこれ）

バックエンドJavaScript実行環境Node.js
ライアンダール氏によって2009年に作成された
V8 JacaScriptエンジン上に構築されたJavaScript実行環境

Node.jsの特徴
・フロントエンドで使われるJavaScriptがバックエンドでも使える。
・Webサーバも作成できる。
・スングルスレッドで動作、ノンブロッキングI/O、イベント
	イベント駆動型プログラミング、フローの代わりにイベントに応じた動作を記述する
・C10K問題を効率的に解決可能
	クライアントが1万台に達するとレスポンスが低下する問題

Express
・Node.jsで利用できるWebアプリケーションフレームワーク
・Node.jsに比較的近い使い心地であり、小さくてパワフル
・Generatorと呼ばれるプロジェクト作成を簡単にするプログラムが用意されている。





